<?php

namespace App\Http\Controllers;

use {{ rootNamespace }}Http\Controllers\Controller;
use Illuminate\Http\Request;
use {{ rootNamespace }}Models\{{ModelName}};
use Illuminate\Support\Facades\Auth;

class {{ class }} extends Controller
{
    public function index()
    {

        ${{crudModelName}} = {{ModelName}}::all();
     if(!Auth::check()){


            return redirect("login")->withSuccess('You are not allowed to access');
        }

        return view('{{crudModelName}}.index', ['{{crudModelName}}' => ${{crudModelName}}]);
    }

    public function show({{ModelName}} ${{crudModelNameSing}})
    {
     if(!Auth::check()){


            return redirect("login")->withSuccess('You are not allowed to access');
        }
        ${{crudModelName}} = {{ModelName}}::all();

        return view('{{crudModelName}}.show', ['{{crudModelNameSing}}' => ${{crudModelNameSing}}]);
    }

    public function edit({{ModelName}} ${{crudModelNameSing}})
    {
     if(!Auth::check()){


            return redirect("login")->withSuccess('You are not allowed to access');
        }
        return view('{{crudModelName}}.edit', ['{{crudModelNameSing}}' => ${{crudModelNameSing}}]);
    }

    public static function destroy({{ModelName}} ${{crudModelNameSing}})
    {
         if(!Auth::check()){


                return redirect("login")->withSuccess('You are not allowed to access');
            }
        ${{crudModelNameSing}} = {{ModelName}}::find(${{crudModelNameSing}}->id)->delete();

        ${{crudModelName}} = {{ModelName}}::all();

        return redirect()->route('{{crudModelName}}.index');
    }

    public function store(Request $request)
    {
     if(!Auth::check()){


            return redirect("login")->withSuccess('You are not allowed to access');
        }

        $this->validate($request, array(
            //'title' => 'required|max:100|min:5',

{{Validation Items}}

        ));
        ${{crudModelNameSing}} = new {{ModelName}}();


       // ${{crudModelNameSing}}->title = $request->input("title"); //THIS
        {{Request Items}}

        ${{crudModelNameSing}}->save();
        return redirect()->back()->with("success", "Created New {{ModelName}}!");
    }

    public function update(Request $request, {{ModelName}} ${{crudModelNameSing}})
    {
         if(!Auth::check()){


                return redirect("login")->withSuccess('You are not allowed to access');
            }
        $this->validate($request, array(

{{Validation Items}}
        ));

{{Request Items}}

        ${{crudModelNameSing}}->save();

        return view('{{crudModelName}}.show', ['{{crudModelNameSing}}' => ${{crudModelNameSing}}])->withSuccess("Edited");

    }

}
